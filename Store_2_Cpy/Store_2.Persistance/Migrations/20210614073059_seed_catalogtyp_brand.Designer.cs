// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Store_2.Persistance.Contexts;

namespace Store_2.Persistance.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20210614073059_seed_catalogtyp_brand")]
    partial class seed_catalogtyp_brand
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Store_2.Domain.Catalogs.CatalogBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 6, 14, 12, 0, 57, 638, DateTimeKind.Local).AddTicks(3064));

                    b.Property<bool>("IsRemoved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("RemovedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Catalogbran");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Samsung"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Xiaomi"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Apple"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Huawei"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Nokia"
                        });
                });

            modelBuilder.Entity("Store_2.Domain.Catalogs.CatalogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 6, 14, 12, 0, 57, 656, DateTimeKind.Local).AddTicks(8454));

                    b.Property<bool>("IsRemoved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("ParentCatalogTpeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentCatalogTpeId");

                    b.ToTable("CatalogType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Digital goods"
                        },
                        new
                        {
                            Id = 2,
                            ParentCatalogTpeId = 1,
                            Type = "Phone accessories"
                        },
                        new
                        {
                            Id = 3,
                            ParentCatalogTpeId = 2,
                            Type = "Phone holder base"
                        },
                        new
                        {
                            Id = 4,
                            ParentCatalogTpeId = 2,
                            Type = "Mobile charger power bank"
                        },
                        new
                        {
                            Id = 5,
                            ParentCatalogTpeId = 2,
                            Type = "Phone case and cover"
                        });
                });

            modelBuilder.Entity("Store_2.Domain.Catalogs.CatalogType", b =>
                {
                    b.HasOne("Store_2.Domain.Catalogs.CatalogType", "ParentCatalogTpe")
                        .WithMany("SubType")
                        .HasForeignKey("ParentCatalogTpeId");

                    b.Navigation("ParentCatalogTpe");
                });

            modelBuilder.Entity("Store_2.Domain.Catalogs.CatalogType", b =>
                {
                    b.Navigation("SubType");
                });
#pragma warning restore 612, 618
        }
    }
}
